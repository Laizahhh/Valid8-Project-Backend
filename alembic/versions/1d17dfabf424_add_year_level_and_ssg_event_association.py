"""add_year_level_and_ssg_event_association

Revision ID: 1d17dfabf424
Revises: b056ae288b11
Create Date: 2025-05-03 12:21:41.766484

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1d17dfabf424'
down_revision: Union[str, None] = 'b056ae288b11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_ssg_association',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('ssg_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['ssg_profile_id'], ['ssg_profiles.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'ssg_profile_id')
    )
    op.create_index(op.f('ix_ssg_profiles_position'), 'ssg_profiles', ['position'], unique=False)
    op.create_index(op.f('ix_ssg_profiles_user_id'), 'ssg_profiles', ['user_id'], unique=True)
    op.drop_constraint('ssg_profiles_user_id_fkey', 'ssg_profiles', type_='foreignkey')
    op.create_foreign_key(None, 'ssg_profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('student_profiles', sa.Column('year_level', sa.Integer(), nullable=True))
    op.execute("UPDATE student_profiles SET year_level = 1 WHERE year_level IS NULL")
    op.alter_column('student_profiles', 'year_level', nullable=False)
    op.drop_constraint('student_profiles_student_id_key', 'student_profiles', type_='unique')
    op.create_index(op.f('ix_student_profiles_department_id'), 'student_profiles', ['department_id'], unique=False)
    op.create_index(op.f('ix_student_profiles_program_id'), 'student_profiles', ['program_id'], unique=False)
    op.create_index(op.f('ix_student_profiles_student_id'), 'student_profiles', ['student_id'], unique=True)
    op.create_index(op.f('ix_student_profiles_user_id'), 'student_profiles', ['user_id'], unique=True)
    op.drop_constraint('student_profiles_user_id_fkey', 'student_profiles', type_='foreignkey')
    op.drop_constraint('student_profiles_program_id_fkey', 'student_profiles', type_='foreignkey')
    op.drop_constraint('student_profiles_department_id_fkey', 'student_profiles', type_='foreignkey')
    op.create_foreign_key(None, 'student_profiles', 'programs', ['program_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'student_profiles', 'departments', ['department_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'student_profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_user_roles_role_id'), 'user_roles', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_roles_user_id'), 'user_roles', ['user_id'], unique=False)
    op.drop_constraint('user_roles_role_id_fkey', 'user_roles', type_='foreignkey')
    op.drop_constraint('user_roles_user_id_fkey', 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key('user_roles_user_id_fkey', 'user_roles', 'users', ['user_id'], ['id'])
    op.create_foreign_key('user_roles_role_id_fkey', 'user_roles', 'roles', ['role_id'], ['id'])
    op.drop_index(op.f('ix_user_roles_user_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_role_id'), table_name='user_roles')
    op.drop_constraint(None, 'student_profiles', type_='foreignkey')
    op.drop_constraint(None, 'student_profiles', type_='foreignkey')
    op.drop_constraint(None, 'student_profiles', type_='foreignkey')
    op.create_foreign_key('student_profiles_department_id_fkey', 'student_profiles', 'departments', ['department_id'], ['id'])
    op.create_foreign_key('student_profiles_program_id_fkey', 'student_profiles', 'programs', ['program_id'], ['id'])
    op.create_foreign_key('student_profiles_user_id_fkey', 'student_profiles', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_student_profiles_user_id'), table_name='student_profiles')
    op.drop_index(op.f('ix_student_profiles_student_id'), table_name='student_profiles')
    op.drop_index(op.f('ix_student_profiles_program_id'), table_name='student_profiles')
    op.drop_index(op.f('ix_student_profiles_department_id'), table_name='student_profiles')
    op.create_unique_constraint('student_profiles_student_id_key', 'student_profiles', ['student_id'])
    op.drop_column('student_profiles', 'year_level')
    op.drop_constraint(None, 'ssg_profiles', type_='foreignkey')
    op.create_foreign_key('ssg_profiles_user_id_fkey', 'ssg_profiles', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_ssg_profiles_user_id'), table_name='ssg_profiles')
    op.drop_index(op.f('ix_ssg_profiles_position'), table_name='ssg_profiles')
    op.drop_table('event_ssg_association')
    # ### end Alembic commands ###
