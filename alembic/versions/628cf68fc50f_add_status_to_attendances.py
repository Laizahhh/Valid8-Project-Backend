"""add_status_to_attendances

Revision ID: 628cf68fc50f
Revises: 1d17dfabf424
Create Date: 2025-05-04 21:58:38.260836

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '628cf68fc50f'
down_revision: Union[str, None] = '1d17dfabf424'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Create the enum type
    op.execute("CREATE TYPE attendancestatus AS ENUM ('PRESENT', 'ABSENT', 'EXCUSED')")
    
    # Step 2: Add nullable status column first
    op.add_column('attendances', sa.Column('status_temp', sa.Enum('PRESENT', 'ABSENT', 'EXCUSED', name='attendancestatus'), nullable=True))
    
    # Step 3: Set default value for existing records
    op.execute("UPDATE attendances SET status_temp = 'PRESENT'")
    
    # Step 4: Add notes column
    op.add_column('attendances', sa.Column('notes', sa.Text(), nullable=True))
    
    # Step 5: Rename to final column name and make non-nullable
    op.alter_column('attendances', 'status_temp', nullable=False, new_column_name='status')
    
    # Other schema changes
    op.alter_column('attendances', 'time_in',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    
    # Create indexes
    op.create_index(op.f('ix_attendances_event_id'), 'attendances', ['event_id'], unique=False)
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_index(op.f('ix_attendances_student_id'), 'attendances', ['student_id'], unique=False)
    
    # Handle foreign keys with explicit names
    op.drop_constraint('attendances_event_id_fkey', 'attendances', type_='foreignkey')
    op.drop_constraint('attendances_student_id_fkey', 'attendances', type_='foreignkey')
    op.drop_constraint('attendances_verified_by_fkey', 'attendances', type_='foreignkey')
    
    op.create_foreign_key('fk_attendances_event_id', 'attendances', 'events', ['event_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attendances_student_id', 'attendances', 'student_profiles', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_attendances_verified_by', 'attendances', 'users', ['verified_by'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign keys with explicit names
    op.drop_constraint('fk_attendances_verified_by', 'attendances', type_='foreignkey')
    op.drop_constraint('fk_attendances_student_id', 'attendances', type_='foreignkey')
    op.drop_constraint('fk_attendances_event_id', 'attendances', type_='foreignkey')
    
    # Recreate original foreign keys
    op.create_foreign_key('attendances_verified_by_fkey', 'attendances', 'users', ['verified_by'], ['id'])
    op.create_foreign_key('attendances_student_id_fkey', 'attendances', 'student_profiles', ['student_id'], ['id'])
    op.create_foreign_key('attendances_event_id_fkey', 'attendances', 'events', ['event_id'], ['id'])
    
    # Drop indexes
    op.drop_index(op.f('ix_attendances_student_id'), table_name='attendances')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_index(op.f('ix_attendances_event_id'), table_name='attendances')
    
    # Revert time_in change
    op.alter_column('attendances', 'time_in',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    
    # Drop columns
    op.drop_column('attendances', 'notes')
    op.drop_column('attendances', 'status')
    
    # Drop enum type
    op.execute("DROP TYPE attendancestatus")
    # ### end Alembic commands ###